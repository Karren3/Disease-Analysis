

Imports System.Data.SqlClient
Public Class Form1
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        ' Load symptoms into CheckedListBox
        LoadSymptoms()

        ' Load gender options into ComboBox
        ComboBox1.Items.Clear()
        ComboBox1.Items.AddRange(New String() {"Male", "Female", "Other"})
        ComboBox1.SelectedIndex = 0 ' Default selection
        Me.WindowState = FormWindowState.Maximized


        ' Load background image safely
        If Not Me.DesignMode Then
            Try
                Me.BackgroundImage = Image.FromFile("C:\Users\Karren\OneDrive\Pictures\pic.png")
                Me.BackgroundImageLayout = ImageLayout.Stretch
            Catch ex As Exception
                MessageBox.Show("Error loading background image: " & ex.Message, "Image Load Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        End If
    End Sub

    Private Sub LoadSymptoms()
        Dim query As String = "SELECT SymptomName FROM Symptoms"
        Using con As New SqlConnection("Server=DESKTOP-90CKLJ3;Initial Catalog=Diseasesdb;Integrated Security=True;TrustServerCertificate=True;")
            Using cmd As New SqlCommand(query, con)
                con.Open()
                Using reader As SqlDataReader = cmd.ExecuteReader()
                    While reader.Read()
                        CheckedListBox1.Items.Add(reader("SymptomName").ToString())
                    End While
                End Using
            End Using
        End Using
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        ' Collect selected symptoms
        Dim selectedSymptoms As New List(Of String)
        For Each symptom In CheckedListBox1.CheckedItems
            selectedSymptoms.Add(symptom.ToString())
        Next

        ' Ensure at least one symptom is selected
        If selectedSymptoms.Count = 0 Then
            MessageBox.Show("Please select at least one symptom.", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Warning)
            Return
        End If

        ' Join symptoms into comma-separated string
        Dim symptomList As String = String.Join(", ", selectedSymptoms)

        ' Get Gender and Age input
        Dim selectedGender As String = If(ComboBox1.SelectedItem IsNot Nothing, ComboBox1.SelectedItem.ToString(), "Not Specified")
        Dim selectedAge As Integer = CInt(NumericUpDown1.Value)

        ' Get Personal Information
        Dim firstName As String = TextBox1.Text.Trim()
        Dim lastName As String = TextBox2.Text.Trim()
        Dim email As String = TextBox3.Text.Trim()
        Dim phoneNumber As String = TextBox4.Text.Trim()

        ' Validate Input Fields
        If String.IsNullOrWhiteSpace(firstName) OrElse
           String.IsNullOrWhiteSpace(lastName) OrElse
           String.IsNullOrWhiteSpace(email) OrElse
           String.IsNullOrWhiteSpace(phoneNumber) Then
            MessageBox.Show("All fields are required!", "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Warning)
            Return
        End If

        ' Fetch diseases based on symptoms
        Dim diseases As New List(Of String)

        Using con As New SqlConnection("Server=DESKTOP-90CKLJ3;Initial Catalog=Diseasesdb;Integrated Security=True;TrustServerCertificate=True;")
            Dim symptomParams As String = String.Join(",", selectedSymptoms.Select(Function(s, i) "@symptom" & i))
            Dim query As String = "SELECT DISTINCT d.DiseaseName 
                                   FROM Diseases d
                                   INNER JOIN DiseaseSymptoms ds ON d.DiseaseID = ds.DiseaseID
                                   INNER JOIN Symptoms s ON ds.SymptomID = s.SymptomID
                                   WHERE s.SymptomName IN (" & symptomParams & ")
                                   GROUP BY d.DiseaseName
                                   HAVING COUNT(DISTINCT s.SymptomName) = @symptomCount"

            Using cmd As New SqlCommand(query, con)
                For i As Integer = 0 To selectedSymptoms.Count - 1
                    cmd.Parameters.AddWithValue("@symptom" & i, selectedSymptoms(i))
                Next
                cmd.Parameters.AddWithValue("@symptomCount", selectedSymptoms.Count)

                con.Open()
                Using reader As SqlDataReader = cmd.ExecuteReader()
                    While reader.Read()
                        diseases.Add(reader("DiseaseName").ToString())
                    End While
                End Using
            End Using
        End Using

        ' Display diseases in ListBox
        ListBox1.Items.Clear()
        If diseases.Count > 0 Then
            ListBox1.Items.AddRange(diseases.ToArray())
        Else
            ListBox1.Items.Add("No matching disease found.")
        End If

        ' Save patient info with symptoms
        SavePatientInfo(firstName, lastName, email, phoneNumber, selectedGender, selectedAge, symptomList)
    End Sub

    Private Sub SavePatientInfo(firstName As String, lastName As String, email As String, phoneNumber As String, gender As String, age As Integer, symptoms As String)
        Using con As New SqlConnection("Server=DESKTOP-90CKLJ3;Initial Catalog=patientinfo;Integrated Security=True;TrustServerCertificate=True;")
            Dim query As String = "INSERT INTO PatientInfo (FirstName, LastName, Email, PhoneNumber, Gender, Age, Symptoms) 
                                   VALUES (@FirstName, @LastName, @Email, @PhoneNumber, @Gender, @Age, @Symptoms)"
            Using cmd As New SqlCommand(query, con)
                cmd.Parameters.AddWithValue("@FirstName", firstName)
                cmd.Parameters.AddWithValue("@LastName", lastName)
                cmd.Parameters.AddWithValue("@Email", email)
                cmd.Parameters.AddWithValue("@PhoneNumber", phoneNumber)
                cmd.Parameters.AddWithValue("@Gender", gender)
                cmd.Parameters.AddWithValue("@Age", age)
                cmd.Parameters.AddWithValue("@Symptoms", symptoms)

                con.Open()
                cmd.ExecuteNonQuery()
                con.Close()
            End Using
        End Using
    End Sub

    Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
        Dim search As New search
        search.Show()
        search.Location = Me.Location
    End Sub

    Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
        Dim Form2 As New Form2
        Form2.Show()
        Form2.Location = Me.Location
    End Sub
End Class

